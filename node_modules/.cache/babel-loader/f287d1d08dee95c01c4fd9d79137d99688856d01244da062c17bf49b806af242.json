{"ast":null,"code":"var _jsxFileName = \"/Users/joshfernando/Downloads/AgroChain-dev 2/src/pages/seller/components/NewTranscation.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport farmerImage from \"../../../images/farmer.jpeg\";\nimport { ENTITY_SECRET, FARMER_WALLET_ADDRESS, IDEMPOTENCY_KEY, SELLER_TOKEN_ID, SELLER_WALLET_ID, TEST_API_KEY } from \"../../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTransaction({\n  p_farmer\n}) {\n  _s();\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n  const handleTextFieldChange = event => {\n    setTextFieldValue(event.target.value);\n  };\n  async function createANewTransation() {\n    const encryptCiper = await getEncryptedCiper();\n    console.log(\"Calling Transation APi\");\n    const options = {\n      method: \"POST\",\n      url: \"https://api.circle.com/v1/w3s/developer/transactions/transfer\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TEST_API_KEY}`\n      },\n      data: {\n        idempotencyKey: `${IDEMPOTENCY_KEY}`,\n        entitySecretCipherText: `${encryptCiper}`,\n        amounts: [\"0.0011\"],\n        feeLevel: \"HIGH\",\n        tokenId: `${SELLER_TOKEN_ID}`,\n        walletId: `${SELLER_WALLET_ID}`,\n        destinationAddress: `${FARMER_WALLET_ADDRESS}`\n      }\n    };\n    console.log(\"options\", options);\n    try {\n      const {\n        data\n      } = await axios.request(options);\n      console.log(data);\n      if (data.state == \"INITIATED\") {\n        toast.success(\"Transcation Initated\", {\n          position: toast.POSITION.TOP_CENTER\n        });\n      } else {\n        toast.success(\"Transcation failed\", {\n          position: toast.POSITION.TOP_CENTER\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.success(\"Transcation failed\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  }\n  async function getEncryptedCiper() {\n    const url = \"https://api.circle.com/v1/w3s/config/entity/publicKey\";\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TEST_API_KEY}`\n      }\n    };\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n      const publicKey = data.data.publicKey.trim();\n      console.log(\"publicKey\", data);\n      const entitySecret = ENTITY_SECRET;\n      const encryptCiper = await fetch(\"http://localhost:3001/encrypt\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          entitySecret,\n          publicKey\n        })\n      });\n      const result = await encryptCiper.json();\n      console.log(\"result\", result);\n      return result.encryptedData;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"New Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input input-bordered w-full mb-2 \",\n        value: textFieldValue,\n        onChange: handleTextFieldChange,\n        id: \"myamount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary m-1 w-32 h-14\",\n          onClick: () => {\n            createANewTransation();\n          },\n          children: \"BID to\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row m-1 h-14 w-full p-2 bg-slate-600 rounded items-center border\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"h-12 w-12 rounded-full  object-cover mr-2\",\n            src: farmerImage,\n            alt: \"Random Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" w-32 overflow-ellipsis overflow-hidden\",\n            children: FARMER_WALLET_ADDRESS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTransaction, \"SjdJ/uJj9Sl9AkkSNDbnrCLIMFQ=\");\n_c = NewTransaction;\nexport default NewTransaction;\nvar _c;\n$RefreshReg$(_c, \"NewTransaction\");","map":{"version":3,"names":["axios","React","useState","toast","farmerImage","ENTITY_SECRET","FARMER_WALLET_ADDRESS","IDEMPOTENCY_KEY","SELLER_TOKEN_ID","SELLER_WALLET_ID","TEST_API_KEY","jsxDEV","_jsxDEV","NewTransaction","p_farmer","_s","textFieldValue","setTextFieldValue","handleTextFieldChange","event","target","value","createANewTransation","encryptCiper","getEncryptedCiper","console","log","options","method","url","headers","Authorization","data","idempotencyKey","entitySecretCipherText","amounts","feeLevel","tokenId","walletId","destinationAddress","request","state","success","position","POSITION","TOP_CENTER","error","response","fetch","json","publicKey","trim","entitySecret","body","JSON","stringify","result","encryptedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","class","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/joshfernando/Downloads/AgroChain-dev 2/src/pages/seller/components/NewTranscation.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport farmerImage from \"../../../images/farmer.jpeg\";\n\nimport {\n  ENTITY_SECRET,\n  FARMER_WALLET_ADDRESS,\n  IDEMPOTENCY_KEY,\n  SELLER_TOKEN_ID,\n  SELLER_WALLET_ID,\n  TEST_API_KEY,\n} from \"../../Constants\";\n\nfunction NewTransaction({ p_farmer }) {\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n\n  const handleTextFieldChange = (event) => {\n    setTextFieldValue(event.target.value);\n  };\n\n  async function createANewTransation() {\n    const encryptCiper = await getEncryptedCiper();\n    console.log(\"Calling Transation APi\");\n    const options = {\n      method: \"POST\",\n      url: \"https://api.circle.com/v1/w3s/developer/transactions/transfer\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TEST_API_KEY}`,\n      },\n      data: {\n        idempotencyKey: `${IDEMPOTENCY_KEY}`,\n        entitySecretCipherText: `${encryptCiper}`,\n        amounts: [\"0.0011\"],\n        feeLevel: \"HIGH\",\n        tokenId: `${SELLER_TOKEN_ID}`,\n        walletId: `${SELLER_WALLET_ID}`,\n        destinationAddress: `${FARMER_WALLET_ADDRESS}`,\n      },\n    };\n\n    console.log(\"options\", options);\n\n    try {\n      const { data } = await axios.request(options);\n      console.log(data);\n      if (data.state == \"INITIATED\") {\n        toast.success(\"Transcation Initated\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n      } else {\n        toast.success(\"Transcation failed\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      toast.success(\"Transcation failed\", {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n  }\n\n  async function getEncryptedCiper() {\n    const url = \"https://api.circle.com/v1/w3s/config/entity/publicKey\";\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${TEST_API_KEY}`,\n      },\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      const publicKey = data.data.publicKey.trim();\n      console.log(\"publicKey\", data);\n\n      const entitySecret = ENTITY_SECRET;\n\n      const encryptCiper = await fetch(\"http://localhost:3001/encrypt\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ entitySecret, publicKey }),\n      });\n\n      const result = await encryptCiper.json();\n      console.log(\"result\", result);\n\n      return result.encryptedData;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"mt-10\">\n      <h2 className=\"my-3\">New Transactions</h2>\n      <p>\n        <input\n          type=\"text\"\n          className=\"input input-bordered w-full mb-2 \"\n          value={textFieldValue}\n          onChange={handleTextFieldChange}\n          id=\"myamount\"\n        ></input>\n        <div className=\"flex flex-row\">\n          <button\n            class=\"btn btn-primary m-1 w-32 h-14\"\n            onClick={() => {\n              createANewTransation();\n            }}\n          >\n            BID to\n          </button>\n          <div className=\"flex flex-row m-1 h-14 w-full p-2 bg-slate-600 rounded items-center border\">\n            <img\n              className=\"h-12 w-12 rounded-full  object-cover mr-2\"\n              src={farmerImage}\n              alt=\"Random Image\"\n            ></img>\n            <div className=\" w-32 overflow-ellipsis overflow-hidden\">\n              {FARMER_WALLET_ADDRESS}\n            </div>\n          </div>\n        </div>\n      </p>\n    </div>\n  );\n}\n\nexport default NewTransaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}